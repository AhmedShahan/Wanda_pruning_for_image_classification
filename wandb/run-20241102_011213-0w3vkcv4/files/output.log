Set warmup steps = 8750
Set warmup steps = 0
Param groups = {
  "decay": {
    "weight_decay": 0.05,
    "params": [
      "downsample_layers.0.0.weight",
      "downsample_layers.1.1.weight",
      "downsample_layers.2.1.weight",
      "downsample_layers.3.1.weight",
      "stages.0.0.dwconv.weight",
      "stages.0.0.pwconv1.weight",
      "stages.0.0.pwconv2.weight",
      "stages.0.1.dwconv.weight",
      "stages.0.1.pwconv1.weight",
      "stages.0.1.pwconv2.weight",
      "stages.0.2.dwconv.weight",
      "stages.0.2.pwconv1.weight",
      "stages.0.2.pwconv2.weight",
      "stages.1.0.dwconv.weight",
      "stages.1.0.pwconv1.weight",
      "stages.1.0.pwconv2.weight",
      "stages.1.1.dwconv.weight",
      "stages.1.1.pwconv1.weight",
      "stages.1.1.pwconv2.weight",
      "stages.1.2.dwconv.weight",
      "stages.1.2.pwconv1.weight",
      "stages.1.2.pwconv2.weight",
      "stages.2.0.dwconv.weight",
      "stages.2.0.pwconv1.weight",
      "stages.2.0.pwconv2.weight",
      "stages.2.1.dwconv.weight",
      "stages.2.1.pwconv1.weight",
      "stages.2.1.pwconv2.weight",
      "stages.2.2.dwconv.weight",
      "stages.2.2.pwconv1.weight",
      "stages.2.2.pwconv2.weight",
      "stages.2.3.dwconv.weight",
      "stages.2.3.pwconv1.weight",
      "stages.2.3.pwconv2.weight",
      "stages.2.4.dwconv.weight",
      "stages.2.4.pwconv1.weight",
      "stages.2.4.pwconv2.weight",
      "stages.2.5.dwconv.weight",
      "stages.2.5.pwconv1.weight",
      "stages.2.5.pwconv2.weight",
      "stages.2.6.dwconv.weight",
      "stages.2.6.pwconv1.weight",
      "stages.2.6.pwconv2.weight",
      "stages.2.7.dwconv.weight",
      "stages.2.7.pwconv1.weight",
      "stages.2.7.pwconv2.weight",
      "stages.2.8.dwconv.weight",
      "stages.2.8.pwconv1.weight",
      "stages.2.8.pwconv2.weight",
      "stages.3.0.dwconv.weight",
      "stages.3.0.pwconv1.weight",
      "stages.3.0.pwconv2.weight",
      "stages.3.1.dwconv.weight",
      "stages.3.1.pwconv1.weight",
      "stages.3.1.pwconv2.weight",
      "stages.3.2.dwconv.weight",
      "stages.3.2.pwconv1.weight",
      "stages.3.2.pwconv2.weight",
      "head.weight"
    ],
    "lr_scale": 1.0
  },
  "no_decay": {
    "weight_decay": 0.0,
    "params": [
      "downsample_layers.0.0.bias",
      "downsample_layers.0.1.weight",
      "downsample_layers.0.1.bias",
      "downsample_layers.1.0.weight",
      "downsample_layers.1.0.bias",
      "downsample_layers.1.1.bias",
      "downsample_layers.2.0.weight",
      "downsample_layers.2.0.bias",
      "downsample_layers.2.1.bias",
      "downsample_layers.3.0.weight",
      "downsample_layers.3.0.bias",
      "downsample_layers.3.1.bias",
      "stages.0.0.gamma",
      "stages.0.0.dwconv.bias",
      "stages.0.0.norm.weight",
      "stages.0.0.norm.bias",
      "stages.0.0.pwconv1.bias",
      "stages.0.0.pwconv2.bias",
      "stages.0.1.gamma",
      "stages.0.1.dwconv.bias",
      "stages.0.1.norm.weight",
      "stages.0.1.norm.bias",
      "stages.0.1.pwconv1.bias",
      "stages.0.1.pwconv2.bias",
      "stages.0.2.gamma",
      "stages.0.2.dwconv.bias",
      "stages.0.2.norm.weight",
      "stages.0.2.norm.bias",
      "stages.0.2.pwconv1.bias",
      "stages.0.2.pwconv2.bias",
      "stages.1.0.gamma",
      "stages.1.0.dwconv.bias",
      "stages.1.0.norm.weight",
      "stages.1.0.norm.bias",
      "stages.1.0.pwconv1.bias",
      "stages.1.0.pwconv2.bias",
      "stages.1.1.gamma",
      "stages.1.1.dwconv.bias",
      "stages.1.1.norm.weight",
      "stages.1.1.norm.bias",
      "stages.1.1.pwconv1.bias",
      "stages.1.1.pwconv2.bias",
      "stages.1.2.gamma",
      "stages.1.2.dwconv.bias",
      "stages.1.2.norm.weight",
      "stages.1.2.norm.bias",
      "stages.1.2.pwconv1.bias",
      "stages.1.2.pwconv2.bias",
      "stages.2.0.gamma",
      "stages.2.0.dwconv.bias",
      "stages.2.0.norm.weight",
      "stages.2.0.norm.bias",
      "stages.2.0.pwconv1.bias",
      "stages.2.0.pwconv2.bias",
      "stages.2.1.gamma",
      "stages.2.1.dwconv.bias",
      "stages.2.1.norm.weight",
      "stages.2.1.norm.bias",
      "stages.2.1.pwconv1.bias",
      "stages.2.1.pwconv2.bias",
      "stages.2.2.gamma",
      "stages.2.2.dwconv.bias",
      "stages.2.2.norm.weight",
      "stages.2.2.norm.bias",
      "stages.2.2.pwconv1.bias",
      "stages.2.2.pwconv2.bias",
      "stages.2.3.gamma",
      "stages.2.3.dwconv.bias",
      "stages.2.3.norm.weight",
      "stages.2.3.norm.bias",
      "stages.2.3.pwconv1.bias",
      "stages.2.3.pwconv2.bias",
      "stages.2.4.gamma",
      "stages.2.4.dwconv.bias",
      "stages.2.4.norm.weight",
      "stages.2.4.norm.bias",
      "stages.2.4.pwconv1.bias",
      "stages.2.4.pwconv2.bias",
      "stages.2.5.gamma",
      "stages.2.5.dwconv.bias",
      "stages.2.5.norm.weight",
      "stages.2.5.norm.bias",
      "stages.2.5.pwconv1.bias",
      "stages.2.5.pwconv2.bias",
      "stages.2.6.gamma",
      "stages.2.6.dwconv.bias",
      "stages.2.6.norm.weight",
      "stages.2.6.norm.bias",
      "stages.2.6.pwconv1.bias",
      "stages.2.6.pwconv2.bias",
      "stages.2.7.gamma",
      "stages.2.7.dwconv.bias",
      "stages.2.7.norm.weight",
      "stages.2.7.norm.bias",
      "stages.2.7.pwconv1.bias",
      "stages.2.7.pwconv2.bias",
      "stages.2.8.gamma",
      "stages.2.8.dwconv.bias",
      "stages.2.8.norm.weight",
      "stages.2.8.norm.bias",
      "stages.2.8.pwconv1.bias",
      "stages.2.8.pwconv2.bias",
      "stages.3.0.gamma",
      "stages.3.0.dwconv.bias",
      "stages.3.0.norm.weight",
      "stages.3.0.norm.bias",
      "stages.3.0.pwconv1.bias",
      "stages.3.0.pwconv2.bias",
      "stages.3.1.gamma",
      "stages.3.1.dwconv.bias",
      "stages.3.1.norm.weight",
      "stages.3.1.norm.bias",
      "stages.3.1.pwconv1.bias",
      "stages.3.1.pwconv2.bias",
      "stages.3.2.gamma",
      "stages.3.2.dwconv.bias",
      "stages.3.2.norm.weight",
      "stages.3.2.norm.bias",
      "stages.3.2.pwconv1.bias",
      "stages.3.2.pwconv2.bias",
      "norm.weight",
      "norm.bias",
      "head.bias"
    ],
    "lr_scale": 1.0
  }
}
/home/shahanahmed/.local/lib/python3.10/site-packages/timm/utils/cuda.py:50: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()
**************Prune Round 1**********************

Current sparsity level: 0.00176105406222953
Block 0
Layer: 0.pwconv1, Metric before mask: tensor([[0.0052, 0.0349, 0.0235,  ..., 0.0014, 0.0107, 0.0113],
        [0.0239, 0.0175, 0.0178,  ..., 0.0110, 0.0090, 0.0043],
        [0.0005, 0.0079, 0.0024,  ..., 0.0028, 0.0040, 0.0026],
        ...,
        [0.0162, 0.0167, 0.0065,  ..., 0.0159, 0.0104, 0.0283],
        [0.0015, 0.0216, 0.0425,  ..., 0.0245, 0.0415, 0.0108],
        [0.0058, 0.0047, 0.0113,  ..., 0.0129, 0.0120, 0.0110]],
       device='cuda:0')
W_mask for 0.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 96])
Weight shape for 0.pwconv1: torch.Size([384, 96])
Non-zero weights for 0.pwconv1 after pruning: 36864
Layer: 0.pwconv2, Metric before mask: tensor([[0.0118, 0.0243, 0.0114,  ..., 0.0046, 0.0025, 0.0166],
        [0.0306, 0.0134, 0.0277,  ..., 0.0026, 0.0269, 0.0008],
        [0.0108, 0.0276, 0.0058,  ..., 0.0362, 0.0067, 0.0460],
        ...,
        [0.0254, 0.0033, 0.0071,  ..., 0.0088, 0.0419, 0.0240],
        [0.0011, 0.0292, 0.0027,  ..., 0.0292, 0.0320, 0.0088],
        [0.0012, 0.0097, 0.0262,  ..., 0.0437, 0.0432, 0.0297]],
       device='cuda:0')
W_mask for 0.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([96, 384])
Weight shape for 0.pwconv2: torch.Size([96, 384])
Non-zero weights for 0.pwconv2 after pruning: 36864
Layer: 1.pwconv1, Metric before mask: tensor([[0.0115, 0.0187, 0.0029,  ..., 0.0038, 0.0085, 0.0489],
        [0.0020, 0.0380, 0.0376,  ..., 0.0024, 0.0410, 0.0260],
        [0.0191, 0.0244, 0.0130,  ..., 0.0504, 0.0034, 0.0032],
        ...,
        [0.0083, 0.0219, 0.0173,  ..., 0.0218, 0.0071, 0.0071],
        [0.0139, 0.0332, 0.0034,  ..., 0.0326, 0.0032, 0.0130],
        [0.0256, 0.0234, 0.0003,  ..., 0.0305, 0.0250, 0.0198]],
       device='cuda:0')
W_mask for 1.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 96])
Weight shape for 1.pwconv1: torch.Size([384, 96])
Non-zero weights for 1.pwconv1 after pruning: 36864
Layer: 1.pwconv2, Metric before mask: tensor([[0.0058, 0.0133, 0.0319,  ..., 0.0088, 0.0209, 0.0039],
        [0.0159, 0.0188, 0.0032,  ..., 0.0188, 0.0259, 0.0095],
        [0.0171, 0.0103, 0.0408,  ..., 0.0203, 0.0074, 0.0056],
        ...,
        [0.0037, 0.0143, 0.0088,  ..., 0.0026, 0.0068, 0.0158],
        [0.0110, 0.0057, 0.0199,  ..., 0.0400, 0.0200, 0.0256],
        [0.0358, 0.0318, 0.0201,  ..., 0.0080, 0.0210, 0.0018]],
       device='cuda:0')
W_mask for 1.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([96, 384])
Weight shape for 1.pwconv2: torch.Size([96, 384])
Non-zero weights for 1.pwconv2 after pruning: 36864
Layer: 2.pwconv1, Metric before mask: tensor([[0.0224, 0.0158, 0.0135,  ..., 0.0273, 0.0435, 0.0240],
        [0.0170, 0.0112, 0.0110,  ..., 0.0279, 0.0298, 0.0050],
        [0.0073, 0.0057, 0.0070,  ..., 0.0155, 0.0068, 0.0451],
        ...,
        [0.0231, 0.0192, 0.0099,  ..., 0.0221, 0.0268, 0.0261],
        [0.0052, 0.0153, 0.0341,  ..., 0.0077, 0.0139, 0.0035],
        [0.0087, 0.0131, 0.0025,  ..., 0.0017, 0.0088, 0.0068]],
       device='cuda:0')
W_mask for 2.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 96])
Weight shape for 2.pwconv1: torch.Size([384, 96])
Non-zero weights for 2.pwconv1 after pruning: 36864
Layer: 2.pwconv2, Metric before mask: tensor([[0.0153, 0.0272, 0.0355,  ..., 0.0080, 0.0046, 0.0622],
        [0.0203, 0.0164, 0.0483,  ..., 0.0238, 0.0169, 0.0212],
        [0.0136, 0.0056, 0.0109,  ..., 0.0137, 0.0074, 0.0030],
        ...,
        [0.0115, 0.0205, 0.0046,  ..., 0.0157, 0.0287, 0.0016],
        [0.0252, 0.0328, 0.0252,  ..., 0.0150, 0.0158, 0.0152],
        [0.0026, 0.0331, 0.0146,  ..., 0.0474, 0.0119, 0.0003]],
       device='cuda:0')
W_mask for 2.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([96, 384])
Weight shape for 2.pwconv2: torch.Size([96, 384])
Non-zero weights for 2.pwconv2 after pruning: 36864
Block 1
Layer: 0.pwconv1, Metric before mask: tensor([[0.0106, 0.0143, 0.0120,  ..., 0.0152, 0.0100, 0.0254],
        [0.0261, 0.0024, 0.0061,  ..., 0.0506, 0.0019, 0.0144],
        [0.0022, 0.0072, 0.0327,  ..., 0.0021, 0.0022, 0.0019],
        ...,
        [0.0222, 0.0245, 0.0156,  ..., 0.0088, 0.0354, 0.0054],
        [0.0092, 0.0253, 0.0295,  ..., 0.0077, 0.0034, 0.0487],
        [0.0020, 0.0182, 0.0167,  ..., 0.0295, 0.0134, 0.0138]],
       device='cuda:0')
W_mask for 0.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 192])
Weight shape for 0.pwconv1: torch.Size([768, 192])
Non-zero weights for 0.pwconv1 after pruning: 147456
Layer: 0.pwconv2, Metric before mask: tensor([[0.0003, 0.0400, 0.0210,  ..., 0.0174, 0.0155, 0.0373],
        [0.0232, 0.0074, 0.0072,  ..., 0.0024, 0.0055, 0.0343],
        [0.0293, 0.0180, 0.0409,  ..., 0.0077, 0.0019, 0.0012],
        ...,
        [0.0368, 0.0126, 0.0176,  ..., 0.0121, 0.0006, 0.0014],
        [0.0154, 0.0388, 0.0146,  ..., 0.0173, 0.0109, 0.0006],
        [0.0273, 0.0144, 0.0019,  ..., 0.0392, 0.0348, 0.0227]],
       device='cuda:0')
W_mask for 0.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([192, 768])
Weight shape for 0.pwconv2: torch.Size([192, 768])
Non-zero weights for 0.pwconv2 after pruning: 147456
Layer: 1.pwconv1, Metric before mask: tensor([[0.0047, 0.0266, 0.0029,  ..., 0.0280, 0.0106, 0.0206],
        [0.0249, 0.0065, 0.0278,  ..., 0.0182, 0.0160, 0.0009],
        [0.0244, 0.0049, 0.0284,  ..., 0.0231, 0.0047, 0.0135],
        ...,
        [0.0017, 0.0053, 0.0042,  ..., 0.0431, 0.0046, 0.0256],
        [0.0166, 0.0089, 0.0202,  ..., 0.0265, 0.0108, 0.0267],
        [0.0021, 0.0167, 0.0059,  ..., 0.0228, 0.0319, 0.0009]],
       device='cuda:0')
W_mask for 1.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 192])
Weight shape for 1.pwconv1: torch.Size([768, 192])
Non-zero weights for 1.pwconv1 after pruning: 147456
Layer: 1.pwconv2, Metric before mask: tensor([[0.0312, 0.0269, 0.0172,  ..., 0.0011, 0.0139, 0.0141],
        [0.0130, 0.0335, 0.0142,  ..., 0.0400, 0.0040, 0.0055],
        [0.0143, 0.0220, 0.0090,  ..., 0.0149, 0.0187, 0.0154],
        ...,
        [0.0223, 0.0024, 0.0075,  ..., 0.0108, 0.0058, 0.0079],
        [0.0206, 0.0292, 0.0201,  ..., 0.0186, 0.0038, 0.0094],
        [0.0273, 0.0166, 0.0040,  ..., 0.0153, 0.0153, 0.0304]],
       device='cuda:0')
W_mask for 1.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([192, 768])
Weight shape for 1.pwconv2: torch.Size([192, 768])
Non-zero weights for 1.pwconv2 after pruning: 147456
Layer: 2.pwconv1, Metric before mask: tensor([[0.0179, 0.0018, 0.0505,  ..., 0.0493, 0.0106, 0.0146],
        [0.0021, 0.0076, 0.0146,  ..., 0.0170, 0.0316, 0.0090],
        [0.0201, 0.0274, 0.0038,  ..., 0.0268, 0.0161, 0.0064],
        ...,
        [0.0055, 0.0065, 0.0179,  ..., 0.0026, 0.0094, 0.0122],
        [0.0187, 0.0307, 0.0003,  ..., 0.0159, 0.0158, 0.0025],
        [0.0321, 0.0045, 0.0254,  ..., 0.0003, 0.0165, 0.0208]],
       device='cuda:0')
W_mask for 2.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 192])
Weight shape for 2.pwconv1: torch.Size([768, 192])
Non-zero weights for 2.pwconv1 after pruning: 147456
Layer: 2.pwconv2, Metric before mask: tensor([[0.0031, 0.0385, 0.0207,  ..., 0.0026, 0.0115, 0.0032],
        [0.0205, 0.0133, 0.0066,  ..., 0.0375, 0.0089, 0.0173],
        [0.0203, 0.0036, 0.0373,  ..., 0.0134, 0.0228, 0.0032],
        ...,
        [0.0072, 0.0063, 0.0303,  ..., 0.0354, 0.0044, 0.0348],
        [0.0198, 0.0084, 0.0011,  ..., 0.0276, 0.0025, 0.0279],
        [0.0014, 0.0301, 0.0081,  ..., 0.0267, 0.0092, 0.0235]],
       device='cuda:0')
W_mask for 2.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([192, 768])
Weight shape for 2.pwconv2: torch.Size([192, 768])
Non-zero weights for 2.pwconv2 after pruning: 147456
Block 2
Layer: 0.pwconv1, Metric before mask: tensor([[0.0427, 0.0035, 0.0343,  ..., 0.0074, 0.0207, 0.0298],
        [0.0399, 0.0222, 0.0277,  ..., 0.0042, 0.0084, 0.0288],
        [0.0419, 0.0065, 0.0188,  ..., 0.0293, 0.0104, 0.0636],
        ...,
        [0.0373, 0.0189, 0.0061,  ..., 0.0158, 0.0176, 0.0194],
        [0.0248, 0.0047, 0.0014,  ..., 0.0020, 0.0007, 0.0417],
        [0.0127, 0.0070, 0.0119,  ..., 0.0033, 0.0055, 0.0025]],
       device='cuda:0')
W_mask for 0.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 0.pwconv1: torch.Size([1536, 384])
Non-zero weights for 0.pwconv1 after pruning: 589824
Layer: 0.pwconv2, Metric before mask: tensor([[0.0158, 0.0164, 0.0080,  ..., 0.0043, 0.0079, 0.0246],
        [0.0106, 0.0214, 0.0021,  ..., 0.0080, 0.0085, 0.0087],
        [0.0016, 0.0014, 0.0195,  ..., 0.0309, 0.0104, 0.0375],
        ...,
        [0.0029, 0.0169, 0.0256,  ..., 0.0109, 0.0203, 0.0169],
        [0.0179, 0.0095, 0.0406,  ..., 0.0032, 0.0120, 0.0125],
        [0.0305, 0.0022, 0.0228,  ..., 0.0222, 0.0417, 0.0281]],
       device='cuda:0')
W_mask for 0.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 0.pwconv2: torch.Size([384, 1536])
Non-zero weights for 0.pwconv2 after pruning: 589824
Layer: 1.pwconv1, Metric before mask: tensor([[0.0108, 0.0025, 0.0135,  ..., 0.0218, 0.0299, 0.0224],
        [0.0019, 0.0331, 0.0031,  ..., 0.0127, 0.0217, 0.0018],
        [0.0085, 0.0174, 0.0028,  ..., 0.0123, 0.0154, 0.0237],
        ...,
        [0.0310, 0.0123, 0.0007,  ..., 0.0115, 0.0368, 0.0165],
        [0.0151, 0.0254, 0.0037,  ..., 0.0098, 0.0293, 0.0092],
        [0.0151, 0.0137, 0.0049,  ..., 0.0011, 0.0227, 0.0206]],
       device='cuda:0')
W_mask for 1.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 1.pwconv1: torch.Size([1536, 384])
Non-zero weights for 1.pwconv1 after pruning: 589824
Layer: 1.pwconv2, Metric before mask: tensor([[0.0010, 0.0124, 0.0026,  ..., 0.0029, 0.0017, 0.0567],
        [0.0041, 0.0084, 0.0134,  ..., 0.0005, 0.0082, 0.0055],
        [0.0276, 0.0126, 0.0291,  ..., 0.0104, 0.0041, 0.0045],
        ...,
        [0.0108, 0.0041, 0.0048,  ..., 0.0084, 0.0126, 0.0149],
        [0.0080, 0.0292, 0.0157,  ..., 0.0062, 0.0045, 0.0087],
        [0.0139, 0.0139, 0.0071,  ..., 0.0297, 0.0369, 0.0149]],
       device='cuda:0')
W_mask for 1.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 1.pwconv2: torch.Size([384, 1536])
Non-zero weights for 1.pwconv2 after pruning: 589824
Layer: 2.pwconv1, Metric before mask: tensor([[0.0048, 0.0204, 0.0153,  ..., 0.0076, 0.0234, 0.0061],
        [0.0043, 0.0164, 0.0006,  ..., 0.0191, 0.0140, 0.0181],
        [0.0207, 0.0297, 0.0011,  ..., 0.0026, 0.0092, 0.0002],
        ...,
        [0.0429, 0.0217, 0.0213,  ..., 0.0017, 0.0258, 0.0047],
        [0.0047, 0.0043, 0.0002,  ..., 0.0373, 0.0039, 0.0094],
        [0.0218, 0.0227, 0.0328,  ..., 0.0098, 0.0198, 0.0237]],
       device='cuda:0')
W_mask for 2.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 2.pwconv1: torch.Size([1536, 384])
Non-zero weights for 2.pwconv1 after pruning: 589824
Layer: 2.pwconv2, Metric before mask: tensor([[0.0094, 0.0253, 0.0324,  ..., 0.0147, 0.0240, 0.0146],
        [0.0092, 0.0002, 0.0010,  ..., 0.0225, 0.0275, 0.0275],
        [0.0088, 0.0200, 0.0167,  ..., 0.0133, 0.0085, 0.0020],
        ...,
        [0.0042, 0.0038, 0.0197,  ..., 0.0024, 0.0073, 0.0007],
        [0.0160, 0.0039, 0.0079,  ..., 0.0197, 0.0051, 0.0351],
        [0.0109, 0.0214, 0.0077,  ..., 0.0246, 0.0092, 0.0401]],
       device='cuda:0')
W_mask for 2.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 2.pwconv2: torch.Size([384, 1536])
Non-zero weights for 2.pwconv2 after pruning: 589824
Layer: 3.pwconv1, Metric before mask: tensor([[0.0218, 0.0366, 0.0047,  ..., 0.0044, 0.0021, 0.0079],
        [0.0324, 0.0010, 0.0226,  ..., 0.0059, 0.0091, 0.0139],
        [0.0059, 0.0165, 0.0039,  ..., 0.0182, 0.0158, 0.0242],
        ...,
        [0.0387, 0.0014, 0.0081,  ..., 0.0286, 0.0226, 0.0716],
        [0.0120, 0.0097, 0.0398,  ..., 0.0061, 0.0259, 0.0204],
        [0.0177, 0.0154, 0.0045,  ..., 0.0003, 0.0174, 0.0156]],
       device='cuda:0')
W_mask for 3.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 3.pwconv1: torch.Size([1536, 384])
Non-zero weights for 3.pwconv1 after pruning: 589824
Layer: 3.pwconv2, Metric before mask: tensor([[0.0152, 0.0050, 0.0219,  ..., 0.0063, 0.0107, 0.0163],
        [0.0318, 0.0305, 0.0213,  ..., 0.0054, 0.0263, 0.0168],
        [0.0196, 0.0041, 0.0381,  ..., 0.0134, 0.0163, 0.0090],
        ...,
        [0.0059, 0.0285, 0.0147,  ..., 0.0103, 0.0368, 0.0076],
        [0.0130, 0.0279, 0.0396,  ..., 0.0016, 0.0323, 0.0120],
        [0.0062, 0.0086, 0.0046,  ..., 0.0447, 0.0056, 0.0034]],
       device='cuda:0')
W_mask for 3.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 3.pwconv2: torch.Size([384, 1536])
Non-zero weights for 3.pwconv2 after pruning: 589824
Layer: 4.pwconv1, Metric before mask: tensor([[0.0248, 0.0501, 0.0174,  ..., 0.0161, 0.0015, 0.0151],
        [0.0040, 0.0228, 0.0049,  ..., 0.0217, 0.0092, 0.0198],
        [0.0347, 0.0227, 0.0035,  ..., 0.0006, 0.0092, 0.0084],
        ...,
        [0.0036, 0.0085, 0.0135,  ..., 0.0255, 0.0271, 0.0117],
        [0.0215, 0.0083, 0.0324,  ..., 0.0189, 0.0084, 0.0105],
        [0.0053, 0.0065, 0.0140,  ..., 0.0068, 0.0214, 0.0529]],
       device='cuda:0')
W_mask for 4.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 4.pwconv1: torch.Size([1536, 384])
Non-zero weights for 4.pwconv1 after pruning: 589824
Layer: 4.pwconv2, Metric before mask: tensor([[0.0088, 0.0186, 0.0055,  ..., 0.0154, 0.0229, 0.0250],
        [0.0308, 0.0238, 0.0013,  ..., 0.0336, 0.0073, 0.0251],
        [0.0307, 0.0200, 0.0023,  ..., 0.0328, 0.0082, 0.0338],
        ...,
        [0.0072, 0.0035, 0.0047,  ..., 0.0009, 0.0119, 0.0111],
        [0.0166, 0.0313, 0.0192,  ..., 0.0069, 0.0137, 0.0058],
        [0.0165, 0.0071, 0.0060,  ..., 0.0256, 0.0045, 0.0348]],
       device='cuda:0')
W_mask for 4.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 4.pwconv2: torch.Size([384, 1536])
Non-zero weights for 4.pwconv2 after pruning: 589824
Layer: 5.pwconv1, Metric before mask: tensor([[0.0040, 0.0166, 0.0197,  ..., 0.0564, 0.0024, 0.0077],
        [0.0318, 0.0028, 0.0162,  ..., 0.0037, 0.0169, 0.0077],
        [0.0125, 0.0049, 0.0225,  ..., 0.0136, 0.0382, 0.0192],
        ...,
        [0.0240, 0.0166, 0.0006,  ..., 0.0124, 0.0140, 0.0069],
        [0.0345, 0.0056, 0.0296,  ..., 0.0017, 0.0173, 0.0014],
        [0.0225, 0.0002, 0.0081,  ..., 0.0007, 0.0403, 0.0092]],
       device='cuda:0')
W_mask for 5.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 5.pwconv1: torch.Size([1536, 384])
Non-zero weights for 5.pwconv1 after pruning: 589824
Layer: 5.pwconv2, Metric before mask: tensor([[0.0303, 0.0035, 0.0166,  ..., 0.0100, 0.0026, 0.0011],
        [0.0067, 0.0094, 0.0007,  ..., 0.0163, 0.0038, 0.0017],
        [0.0094, 0.0151, 0.0184,  ..., 0.0077, 0.0117, 0.0199],
        ...,
        [0.0018, 0.0201, 0.0067,  ..., 0.0010, 0.0164, 0.0197],
        [0.0299, 0.0219, 0.0069,  ..., 0.0289, 0.0055, 0.0331],
        [0.0208, 0.0235, 0.0238,  ..., 0.0074, 0.0184, 0.0377]],
       device='cuda:0')
W_mask for 5.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 5.pwconv2: torch.Size([384, 1536])
Non-zero weights for 5.pwconv2 after pruning: 589823
Layer: 6.pwconv1, Metric before mask: tensor([[0.0194, 0.0133, 0.0062,  ..., 0.0274, 0.0186, 0.0207],
        [0.0246, 0.0147, 0.0009,  ..., 0.0405, 0.0068, 0.0325],
        [0.0035, 0.0130, 0.0133,  ..., 0.0145, 0.0057, 0.0060],
        ...,
        [0.0247, 0.0062, 0.0120,  ..., 0.0167, 0.0036, 0.0394],
        [0.0265, 0.0366, 0.0169,  ..., 0.0260, 0.0341, 0.0071],
        [0.0257, 0.0128, 0.0038,  ..., 0.0191, 0.0039, 0.0316]],
       device='cuda:0')
W_mask for 6.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 6.pwconv1: torch.Size([1536, 384])
Non-zero weights for 6.pwconv1 after pruning: 589823
Layer: 6.pwconv2, Metric before mask: tensor([[0.0086, 0.0184, 0.0175,  ..., 0.0049, 0.0283, 0.0092],
        [0.0128, 0.0125, 0.0486,  ..., 0.0255, 0.0157, 0.0180],
        [0.0301, 0.0273, 0.0098,  ..., 0.0121, 0.0082, 0.0277],
        ...,
        [0.0115, 0.0089, 0.0083,  ..., 0.0003, 0.0054, 0.0084],
        [0.0269, 0.0221, 0.0072,  ..., 0.0159, 0.0530, 0.0121],
        [0.0094, 0.0198, 0.0257,  ..., 0.0143, 0.0360, 0.0165]],
       device='cuda:0')
W_mask for 6.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 6.pwconv2: torch.Size([384, 1536])
Non-zero weights for 6.pwconv2 after pruning: 589824
Layer: 7.pwconv1, Metric before mask: tensor([[0.0201, 0.0133, 0.0443,  ..., 0.0115, 0.0029, 0.0259],
        [0.0155, 0.0006, 0.0140,  ..., 0.0010, 0.0280, 0.0152],
        [0.0080, 0.0283, 0.0061,  ..., 0.0286, 0.0065, 0.0054],
        ...,
        [0.0088, 0.0022, 0.0404,  ..., 0.0028, 0.0015, 0.0322],
        [0.0019, 0.0153, 0.0132,  ..., 0.0152, 0.0112, 0.0030],
        [0.0221, 0.0036, 0.0258,  ..., 0.0066, 0.0136, 0.0374]],
       device='cuda:0')
W_mask for 7.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 7.pwconv1: torch.Size([1536, 384])
Non-zero weights for 7.pwconv1 after pruning: 589824
Layer: 7.pwconv2, Metric before mask: tensor([[0.0041, 0.0187, 0.0058,  ..., 0.0069, 0.0043, 0.0098],
        [0.0027, 0.0061, 0.0031,  ..., 0.0176, 0.0357, 0.0268],
        [0.0225, 0.0249, 0.0226,  ..., 0.0396, 0.0163, 0.0082],
        ...,
        [0.0296, 0.0134, 0.0041,  ..., 0.0009, 0.0045, 0.0271],
        [0.0177, 0.0015, 0.0037,  ..., 0.0205, 0.0022, 0.0118],
        [0.0032, 0.0149, 0.0021,  ..., 0.0248, 0.0087, 0.0034]],
       device='cuda:0')
W_mask for 7.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 7.pwconv2: torch.Size([384, 1536])
Non-zero weights for 7.pwconv2 after pruning: 589824
Layer: 8.pwconv1, Metric before mask: tensor([[2.4981e-02, 2.0702e-02, 1.2579e-02,  ..., 2.3588e-02, 4.1154e-02,
         1.1476e-02],
        [1.0511e-02, 1.4859e-03, 2.9824e-02,  ..., 2.3437e-02, 3.7842e-02,
         6.9899e-03],
        [8.5693e-03, 1.1847e-02, 4.7139e-03,  ..., 1.8734e-02, 2.1147e-02,
         1.1010e-02],
        ...,
        [6.0453e-03, 9.1070e-05, 7.0470e-03,  ..., 1.8422e-02, 4.3143e-02,
         8.9435e-03],
        [5.5570e-04, 1.9786e-02, 8.1251e-04,  ..., 2.1811e-02, 9.4211e-03,
         2.1583e-02],
        [1.1460e-02, 2.2542e-02, 2.2692e-02,  ..., 4.0599e-02, 2.2519e-02,
         8.0431e-03]], device='cuda:0')
W_mask for 8.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([1536, 384])
Weight shape for 8.pwconv1: torch.Size([1536, 384])
Non-zero weights for 8.pwconv1 after pruning: 589824
Layer: 8.pwconv2, Metric before mask: tensor([[0.0212, 0.0179, 0.0039,  ..., 0.0158, 0.0147, 0.0097],
        [0.0049, 0.0149, 0.0034,  ..., 0.0186, 0.0213, 0.0119],
        [0.0273, 0.0088, 0.0124,  ..., 0.0310, 0.0217, 0.0215],
        ...,
        [0.0068, 0.0266, 0.0259,  ..., 0.0343, 0.0257, 0.0008],
        [0.0310, 0.0374, 0.0311,  ..., 0.0271, 0.0212, 0.0009],
        [0.0425, 0.0163, 0.0134,  ..., 0.0021, 0.0061, 0.0280]],
       device='cuda:0')
W_mask for 8.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([384, 1536])
Weight shape for 8.pwconv2: torch.Size([384, 1536])
Non-zero weights for 8.pwconv2 after pruning: 589824
Block 3
Layer: 0.pwconv1, Metric before mask: tensor([[0.0119, 0.0043, 0.0164,  ..., 0.0006, 0.0062, 0.0139],
        [0.0005, 0.0043, 0.0086,  ..., 0.0277, 0.0006, 0.0138],
        [0.0176, 0.0273, 0.0102,  ..., 0.0174, 0.0221, 0.0236],
        ...,
        [0.0181, 0.0089, 0.0183,  ..., 0.0293, 0.0024, 0.0267],
        [0.0006, 0.0447, 0.0039,  ..., 0.0180, 0.0287, 0.0192],
        [0.0140, 0.0205, 0.0029,  ..., 0.0086, 0.0103, 0.0320]],
       device='cuda:0')
W_mask for 0.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([3072, 768])
Weight shape for 0.pwconv1: torch.Size([3072, 768])
Non-zero weights for 0.pwconv1 after pruning: 2359296
Layer: 0.pwconv2, Metric before mask: tensor([[2.4632e-02, 6.1188e-03, 1.0006e-02,  ..., 1.4805e-02, 1.9204e-02,
         3.3860e-02],
        [3.0426e-03, 2.5982e-02, 7.1569e-03,  ..., 2.5454e-03, 1.6056e-02,
         3.8431e-02],
        [2.8098e-02, 1.6752e-02, 3.0282e-02,  ..., 1.8276e-02, 1.1781e-02,
         3.1222e-02],
        ...,
        [4.4136e-03, 2.5553e-04, 3.4121e-02,  ..., 2.3373e-02, 2.3896e-02,
         1.5356e-02],
        [1.6812e-02, 2.4693e-02, 2.9405e-02,  ..., 2.3941e-02, 1.4235e-02,
         8.4098e-05],
        [1.3057e-02, 2.5333e-02, 1.0139e-02,  ..., 1.2416e-02, 3.6641e-02,
         2.6809e-03]], device='cuda:0')
W_mask for 0.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 3072])
Weight shape for 0.pwconv2: torch.Size([768, 3072])
Non-zero weights for 0.pwconv2 after pruning: 2359296
Layer: 1.pwconv1, Metric before mask: tensor([[0.0088, 0.0172, 0.0011,  ..., 0.0035, 0.0046, 0.0048],
        [0.0215, 0.0055, 0.0102,  ..., 0.0153, 0.0113, 0.0122],
        [0.0155, 0.0034, 0.0238,  ..., 0.0030, 0.0117, 0.0391],
        ...,
        [0.0245, 0.0270, 0.0168,  ..., 0.0099, 0.0103, 0.0273],
        [0.0204, 0.0229, 0.0001,  ..., 0.0035, 0.0145, 0.0105],
        [0.0093, 0.0006, 0.0309,  ..., 0.0250, 0.0094, 0.0224]],
       device='cuda:0')
W_mask for 1.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([3072, 768])
Weight shape for 1.pwconv1: torch.Size([3072, 768])
Non-zero weights for 1.pwconv1 after pruning: 2359296
Layer: 1.pwconv2, Metric before mask: tensor([[0.0031, 0.0002, 0.0221,  ..., 0.0184, 0.0138, 0.0337],
        [0.0472, 0.0107, 0.0432,  ..., 0.0110, 0.0141, 0.0194],
        [0.0092, 0.0056, 0.0089,  ..., 0.0321, 0.0242, 0.0287],
        ...,
        [0.0466, 0.0132, 0.0252,  ..., 0.0023, 0.0033, 0.0094],
        [0.0208, 0.0117, 0.0112,  ..., 0.0227, 0.0224, 0.0104],
        [0.0049, 0.0033, 0.0274,  ..., 0.0143, 0.0322, 0.0013]],
       device='cuda:0')
W_mask for 1.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 3072])
Weight shape for 1.pwconv2: torch.Size([768, 3072])
Non-zero weights for 1.pwconv2 after pruning: 2359296
Layer: 2.pwconv1, Metric before mask: tensor([[0.0179, 0.0116, 0.0003,  ..., 0.0013, 0.0126, 0.0296],
        [0.0242, 0.0301, 0.0230,  ..., 0.0215, 0.0319, 0.0111],
        [0.0208, 0.0184, 0.0005,  ..., 0.0211, 0.0153, 0.0031],
        ...,
        [0.0237, 0.0334, 0.0042,  ..., 0.0179, 0.0030, 0.0211],
        [0.0054, 0.0029, 0.0359,  ..., 0.0133, 0.0004, 0.0187],
        [0.0047, 0.0587, 0.0102,  ..., 0.0178, 0.0287, 0.0116]],
       device='cuda:0')
W_mask for 2.pwconv1: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([3072, 768])
Weight shape for 2.pwconv1: torch.Size([3072, 768])
Non-zero weights for 2.pwconv1 after pruning: 2359295
Layer: 2.pwconv2, Metric before mask: tensor([[0.0229, 0.0232, 0.0277,  ..., 0.0256, 0.0184, 0.0081],
        [0.0016, 0.0126, 0.0024,  ..., 0.0178, 0.0115, 0.0253],
        [0.0218, 0.0063, 0.0033,  ..., 0.0084, 0.0380, 0.0069],
        ...,
        [0.0167, 0.0243, 0.0319,  ..., 0.0016, 0.0191, 0.0123],
        [0.0216, 0.0145, 0.0020,  ..., 0.0346, 0.0348, 0.0261],
        [0.0266, 0.0049, 0.0378,  ..., 0.0298, 0.0358, 0.0122]],
       device='cuda:0')
W_mask for 2.pwconv2: tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        ...,
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]], device='cuda:0'), Shape: torch.Size([768, 3072])
Weight shape for 2.pwconv2: torch.Size([768, 3072])
Non-zero weights for 2.pwconv2 after pruning: 2359296
Actual sparsity after pruning: 0.00176105406222953
/home/shahanahmed/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py:557: UserWarning: This DataLoader will create 10 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
Epoch: [0]  [  0/176]  eta: 0:40:53  lr: 0.000000  min_lr: 0.000000  loss: 7.0355 (7.0355)  class_acc: 0.0000 (0.0000)  weight_decay: 0.0500 (0.0500)  time: 13.9419  data: 1.8849  max mem: 1586
Epoch: [0]  [ 10/176]  eta: 0:08:12  lr: 0.000005  min_lr: 0.000005  loss: 7.0470 (7.0450)  class_acc: 0.0000 (0.0004)  weight_decay: 0.0499 (0.0499)  time: 2.9660  data: 0.1768  max mem: 1586
